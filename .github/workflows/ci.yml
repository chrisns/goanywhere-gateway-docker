name: Build

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main


jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      tags: ${{ steps.docker_meta.outputs.tags }}

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Login to dockerhub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1.10.0
        with:
          username: chrisns
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: buildtag
        run: |
          echo "::set-output name=BUILD_TAG::centos-$(cat Dockerfile | sed -n 2p | sed 's/FROM centos://' | sed 's/ as build//')-$(cat version | sed 's/gagateway//' | sed 's/_linux_x64.sh//' | sed 's/_/./g')"
          echo "::set-output name=APP_VERSION::$(cat version | sed 's/gagateway//' | sed 's/_linux_x64.sh//' | sed 's/_/./g')"

      - id: docker_meta
        uses: docker/metadata-action@v3.6.2
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=true
          tags: |
            type=sha,format=long
            type=edge,branch=$repo.default_branch
            type=raw,value=${{ steps.buildtag.outputs.BUILD_TAG }}
            type=raw,value=${{ steps.buildtag.outputs.APP_VERSION }}

      - name: build+push
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          
      - name: Update repo description
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/dockerhub-description@v2.4.3
        with:
          username: chrisns
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ github.repository }}

      - uses: actions/github-script@v5.0.0
        if: github.ref == 'refs/heads/main'
        env:
          TAG: ${{ steps.buildtag.outputs.BUILD_TAG }}
        with:
          script: |
            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${process.env.TAG}`,
                sha: context.sha
              })
            } catch (error) {
              await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${process.env.TAG}`,
                sha: context.sha
              })
            }
  sign:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      actions: none
      checks: none
      contents: none
      deployments: none
      issues: none
      packages: write
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none
      id-token: write

    steps:
      - name: Login to dockerhub
        uses: docker/login-action@v1.10.0
        with:
          username: chrisns
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: sigstore/cosign-installer@v1.4.1

      - name: Sign the images
        run: cosign sign -oidc-issuer https://token.actions.githubusercontent.com ${TAGS}
        env:
          TAGS: ${{needs.build.outputs.tags}}
          COSIGN_EXPERIMENTAL: 1
